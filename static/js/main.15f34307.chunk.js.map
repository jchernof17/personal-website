{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["ReactGA","initialize","pageview","EthSmartContractCard","title","subtitle","text","code_link","project_link","image","IIJSiteCard","HNCard","Proj_170","HackathonCard","FlasketballCard","FortniteCard","MerkleProofCard","MYOPCard","AboutTab","label","this","props","className","Component","About","Jumbotron","id","style","color","width","Project","body","Card","Img","variant","src","Body","Title","Subtitle","Text","Button","href","Portfolio","Row","Contact","MyNavbar","Navbar","bg","Nav","Link","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.15f34307.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport { Navbar, Nav, Card, Button, Jumbotron, Row } from 'react-bootstrap';\nimport {Tabs, Tab} from 'react-bootstrap-tabs';\nimport ReactGA from 'react-ga'; \nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n/*\nOutline: \n\n-Navbar (from react-bootstrap)\n--Home (top of page)\n--About (on page)\n--Resume (link)\n--Projects (on page)\n--Contact (on page)\n\n-Body\n--About\n--Projects\n--Contact\n\n-Footer (copyright)\n\n\nComponents needed:\n\n- Navbar from react-bootstrap\n- Project (custom) -- should just be a bootstrap card\n  - Image\n  - Github link\n  - (optional) deployment link\n- About ?\n- Contact ?\n\nAbout section:\nMy name is Jordan Chernof. I am a sophomore at UC Berkeley studying Computer Science and minoring in Public Policy.\nI was born and raised in the Washington, DC area, where I earned several prestigious honors such as 2nd place in a chess competition the summer before 3rd grade.\nIn high school, I was pretty sure I wanted to go to college for political science. I took a gap year to work fulltime at a political nonprofit and discovered how much programming could help improve the quality and efficiency of my work.\nI decided to study computer science because I think programming is a way of thinking that can help both in many industries and in one's personal life.\nIn my first year of college, I accepted a number of freelance web design and development opportunities for local Berkeley startups and campus-affiliated organizations.\nI also spent some time doing web development for structured teams, such as being the Online Manager for the Daily Californian, our school newspaper, this past summer.\nIn March, I spent a weekend hacking together a website for LifeWork, a startup helping Freelancers build a sustainable career. I and one teammate hacked our way to 2nd place in the LAUNCH Hackathon -- and a nice $500. Since then, I've helped LifeWork and am thrilled to see them win a $5000 grant and be accepted as a Berkeley SkyDeck accelerator team.\nThis past summer, I focused on my software engineering internship at Consensys, a blockchain company that leads the Ethereum development community. I worked with an amazing team called Treum, which had something exciting to announce (albeit usually internally) just about eveyr single day. I met brilliant people and worked with positive personalities and role models, which was all I could have asked for.\nEach opportunity has been a phenomenal practical and mental learning experience for me. Whether it's picking up a new framework, learning how to get through DevOps nightmares, or simply dealing with time management while being a fulltime student, I am grateful each time for the opportunity to work hard and contribute to team success.\nOf course, this is a career-focused website, so I may seem a little serious. But I'm not definitely not all work! I like to play basketball, go hiking, and make breakfast foods. Other times, I like to read and drink homemade tea. And my roommate and I make some very good coffee.\n\nA few projects are public on my Github profile, but some of the interesting work I've done is private. I'm happy to speak more about those if you're interested.\n\nContact section:\nFor internship or freelance inquiries, you can reach out to the email on my resume. Adding me on LinkedIn works as well.\nYou can also reach out for references.\n*/\n\n/* initialize GA */\nfunction initializeReactGA() {\n\tReactGA.initialize('UA-149256621-1');\n\tReactGA.pageview('/homepage');\n}\ninitializeReactGA()\n\n\n\n\nconst resume_link = \"https://1drv.ms/w/s!AuHCf7OLnxVrh4duuQ3FvhLUntLw7w\"\nconst github_link = \"https://github.com/jchernof17\"\nconst linkedin_link = \"https://www.linkedin.com/in/jordan-chernof-086607173/\"\nconst contact_me = `For internship or freelance inquiries, you can reach out to the email on my resume. Adding me on LinkedIn works as well.\nYou can also reach out for references.`\n\n\nconst bio1 = `My name is Jordan Chernof. I am a sophomore at UC Berkeley studying Computer Science and minoring in Public Policy.`\nconst bio2 = `I was born and raised in the Washington, DC area.`\nconst bio3 = `In high school, I was pretty sure I wanted to go to college for political science. I took a gap year to work fulltime at a political nonprofit and discovered how much programming could help improve the quality and efficiency of my work.\nSo I decided to study computer science instead.`\nconst bio4 = `In my first year of college, I accepted a number of freelance web design and development opportunities for local Berkeley startups and campus-affiliated organizations.\nI also spent some time doing web development for structured teams, such as being the Online Manager for the Daily Californian, our school newspaper, this past summer.`\nconst lifework_bio = `In March, I spent a weekend hacking together a website for LifeWork, a startup helping Freelancers build a sustainable career. I and one teammate hacked our way to 2nd place and $500 in the LAUNCH Hackathon. Since then, I've helped LifeWork and am thrilled to see them win a $5000 grant and be accepted as a Berkeley SkyDeck accelerator team.`\nconst consensys_bio = `This past summer, I focused on my software engineering internship at Consensys, a blockchain company that leads the Ethereum development community. I worked with an amazing team called Treum, which had something exciting going on just about every single day. I met and worked with a constructive, highly focused, and inspiring team of blockchain developers.`\nconst conclusion = `Each opportunity has been a phenomenal practical and mental learning experience for me. Whether it's picking up a new framework, learning how to get through DevOps nightmares, or simply dealing with time management while being a fulltime student, I am grateful each time for the opportunity to work hard and contribute to team success.`\nconst lighthearted = `Of course, this is a career-focused website, so I may seem a little serious. But I'm not all work! I like to play basketball, go hiking, and make breakfast food.`\n\nconst directions = `A few projects are public on my Github profile, but some of the interesting work I've done is private. I'm happy to speak more about those if you're interested.`\n\nconst EthSmartContractCard = {\n  title: 'Ethereum Smart Contract Finder',\n  subtitle: 'Uses Python, web3.py',\n  text: 'Command-line interface that accepts the address of an Ethereum Smart Contract and returns the hash of the block and transaction wherein the contract was deployed.',\n  code_link: 'https://github.com/jchernof17/eth-contract-finder',\n  project_link: 'https://github.com/jchernof17/eth-contract-finder',\n  image: ''\n}\n\nconst IIJSiteCard = {\n  title: 'Jewelry Startup Ecommerce Site',\n  subtitle: 'Uses DigitalOcean VPS with customized WordPress backend',\n  text: 'Ecommerce store for a Los Angeles-based jewelry startup. Fully-managed DigitalOcean droplet (VPS) running Wordpress Woocommerce with browser and server caching. Implemented Push, Render, Pre-cache, Lazy-Load (PRPL) practices.',\n  code_link: '#',\n  project_link: 'https://www.isabellaislesjewelry.com',\n  image: '',\n}\n\nconst HNCard = {\n  title: 'Virtual Sproul',\n  subtitle: 'Uses React Hooks on the frontend, small Flask API/backend',\n  text: 'Hack:now Hackathon project (April \\'20) that helps clubs pass out digital flyers to college students',\n  code_link: 'https://github.com/jchernof17/virtual-sproul',\n  project_link: '#',\n  image: '',\n}\n\nconst Proj_170 = {\n  title: 'Horizon Wireless',\n  subtitle: 'Uses Networkx and joblib on Google Cloud Platform servers',\n  text: 'Underlying code fueling project for UC Berkeley CS-170: Algorithms class. Scored in top 1/8th of class.',\n  code_link: 'https://github.com/jchernof17/zoomin',\n  project_link: '#',\n  image: '',\n}\n\nconst HackathonCard = {\n  title: 'LifeWork Hackathon Website MVP',\n  subtitle: 'Uses Node.js, Express, bootstrap',\n  text: 'Website MVP built in the two-day LAUNCH Hackathon. Awarded 2nd prize and $500 in competition.',\n  code_link: 'https://github.com/jchernof17/lifework',\n  project_link: 'https://github.com/jchernof17/lifework',\n  image: ''\n}\n\nconst FlasketballCard = {\n  title: 'Flasketball: Basketball stats in Flask',\n  subtitle: 'Uses Flask, with 0 lines of CSS :)',\n  text: 'My introduction to Flask last winter. A simple app with login/logout that allows users to search for basketball stats.',\n  code_link: 'https://github.com/jchernof17/flask-basketball-scraper',\n  project_link: 'https://github.com/jchernof17/flask-basketball-scraper',\n  image: ''\n}\n\nconst FortniteCard = {\n  title: 'Fortnite Stats',\n  subtitle: 'Uses Linux, Apache, MySQL, and PHP (LAMP stack)',\n  text: 'My first full-stack web app. A crowd-sourced Fornite tournament tracker that allows fans to score Fortnite Friday tournaments, checking the accuracy of fan-entered data. Pitched to investors and sponsors.',\n  code_link: 'https://github.com/jchernof17/fortnite-tournament-tracker',\n  project_link: 'https://github.com/jchernof17/fortnite-tournament-tracker',\n  image: ''\n}\n\nconst MerkleProofCard = {\n  title: 'Merkle Proof Verifier App',\n  subtitle: 'Uses React, supported by a Flask backend',\n  text: 'Still in development, check back soon.',\n  code_link: 'https://github.com/jchernof17/merkle-proof-verifier-app',\n  project_link: 'https://github.com/jchernof17/merkle-proof-verifier-app',\n  image: ''\n}\n\nconst MYOPCard = {\n  title: 'Bode Plot Calculator',\n  subtitle: 'Uses iPython, LaTeX, and circuit analysis techniques',\n  text: 'Interactive iPython demonstration that guides students through using the phasor domain for analysis of intermediate-level circuit design. Won extra credit award for EE16B course.',\n  code_link: 'https://github.com/jchernof17/py-bode-plotter/',\n  project_link: 'https://github.com/jchernof17/py-bode-plotter/',\n  image: ''\n}\n\nclass AboutTab extends Component {\n  \n  render() {\n    let label = this.props.label;\n    let text = this.props.text;\n    return (\n      <Tab label={label} className=\"text-center my-4\"><h2 className=\"my-5\">{text}</h2></Tab>\n    );\n  }\n}\n\n\nclass About extends Component {\n\n  render () {\n    return (\n      <Jumbotron className=\"bg-dark center mb-0\" id=\"about\">\n        <h1 style={{color:\"white\"}}>About Me</h1>\n      <div className=\"mx-3\">\n        <Tabs id=\"bio-tabs\" className=\"my-3 px-5 bg-dark text-white\" style={{ width: '100%' }}>\n          <AboutTab label=\"About Me\" text={bio1}/>\n          <AboutTab label=\"Where I'm From\" text={bio2}/>\n          <AboutTab label=\"In High School\" text={bio3}/>\n          <AboutTab label=\"In College...\" text={bio4}/>\n          <AboutTab label=\"Work with LifeWork\" text={lifework_bio}/>\n          <AboutTab label=\"Internship with ConsenSys\" text={consensys_bio}/>\n          <AboutTab label=\"Conclusion\" text={conclusion}/>\n          <AboutTab label=\"Disclaimer\" text={lighthearted}/>\n          <AboutTab label=\"Directions\" text={directions}/>\n        </Tabs>\n      </div>\n      </Jumbotron>\n    )\n  }\n}\n\nclass Project extends Component {\n\n  render() {\n    let body = this.props.body;\n\n    return (\n    <Card style={{width: '18rem'}} className=\"sm-6 md-4 lg-3 mx-2 my-4\" id=\"project\">\n          <Card.Img variant=\"top\" src={body.image} />\n          <Card.Body>\n            <Card.Title>\n              <strong>{body.title}</strong>\n            </Card.Title>\n            <Card.Subtitle className=\"mb-4\">\n              <em>{body.subtitle}</em>\n            </Card.Subtitle>\n            <Card.Text className=\"text-left mb-4\">\n              {body.text}\n            </Card.Text>\n            <div id=\"project-button\" className=\"my-2\">\n            <Button className=\"mx-1\" id=\"\" variant=\"info\" href={body.code_link}>\n            View Code\n            </Button>\n            <Button className=\"mx-1\" id=\"\" variant=\"info\" href={body.project_link}>\n            View Project\n            </Button>\n            </div>\n          </Card.Body>\n        </Card>\n    )\n  }\n}\n\n\nclass Portfolio extends Component {\n\n  render () {\n    return (\n      <Jumbotron className=\"bg-light center mb-0\" id=\"projects\">\n        <h1 style={{color:\"black\"}}>Projects</h1>\n      <div className=\"mx-3 my-4\">\n        <Row className=\"justify-content-md-center\">\n        <Project body={HNCard}/>\n        <Project body={Proj_170}/>\n        <Project body={EthSmartContractCard}/>\n        <Project body={IIJSiteCard}/>\n        <Project body={FlasketballCard}/>\n        <Project body={HackathonCard}/>\n        <Project body={FortniteCard}/>\n        <Project body={MYOPCard}/>\n        <Project body={MerkleProofCard}/>\n        </Row>\n      </div>\n      </Jumbotron>\n    )\n  }\n}\n\nclass Contact extends Component {\n\n  render() {\n    return (\n      <Jumbotron className=\"bg-dark center mb-0\" id=\"contact\">\n        <h1 style={{color:\"white\"}}>Contact</h1>\n        <div className=\"mx-3 my-4\">\n          <h2 style={{color:\"white\"}}>{contact_me}</h2>\n        </div>\n      </Jumbotron>\n    )\n  }\n}\n\nclass MyNavbar extends Component {\n\n  render() {\n    return (\n      <Navbar bg=\"light\" variant=\"light\">\n        <Nav className=\"mr-auto\">\n          <Nav.Link href=\"#home\">Home</Nav.Link>\n          <Nav.Link href=\"#about\">About</Nav.Link>\n          <Nav.Link href={resume_link}>Resume</Nav.Link>\n          <Nav.Link href=\"#projects\">Projects</Nav.Link>\n          <Nav.Link href=\"#contact\">Contact</Nav.Link>\n          <Nav.Link href={github_link}>Github</Nav.Link>\n          <Nav.Link href={linkedin_link}>LinkedIn</Nav.Link>\n        </Nav>\n      </Navbar>\n    )\n  }\n}\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <MyNavbar/>\n      <About/>\n      <Portfolio/>\n      <Contact/>\n      {/*\n      <Contact>\n      </Contact>\n      <Footer>\n      </Footer> */}\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}